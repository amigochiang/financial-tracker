import { MailService } from '@sendgrid/mail';

if (!process.env.SENDGRID_API_KEY) {
  console.warn("SENDGRID_API_KEY environment variable not set");
}

const mailService = new MailService();
if (process.env.SENDGRID_API_KEY) {
  mailService.setApiKey(process.env.SENDGRID_API_KEY);
}

interface EmailParams {
  to: string;
  from: string;
  subject: string;
  text?: string;
  html?: string;
}

export async function sendEmail(params: EmailParams): Promise<boolean> {
  if (!process.env.SENDGRID_API_KEY) {
    console.log(`Email would be sent to ${params.to}: ${params.subject}`);
    return true; // Return true for development without API key
  }

  try {
    await mailService.send({
      to: params.to,
      from: params.from,
      subject: params.subject,
      text: params.text,
      html: params.html,
    });
    return true;
  } catch (error) {
    console.error('SendGrid email error:', error);
    return false;
  }
}

export async function sendPortfolioAlert(alertType: string, message: string, data?: any): Promise<boolean> {
  const emailParams: EmailParams = {
    to: "amigochiang@gmail.com",
    from: process.env.SENDGRID_FROM_EMAIL || "noreply@portfoliopro.com",
    subject: `Portfolio Alert: ${alertType}`,
    text: message,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #0052FF;">Portfolio Pro Alert</h2>
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #1E293B; margin-bottom: 15px;">${alertType}</h3>
          <p style="color: #475569; line-height: 1.6;">${message}</p>
          ${data ? `<pre style="background-color: #e2e8f0; padding: 10px; border-radius: 4px; overflow-x: auto;"><code>${JSON.stringify(data, null, 2)}</code></pre>` : ''}
        </div>
        <p style="color: #64748B; font-size: 12px; margin-top: 30px;">
          This is an automated alert from your Portfolio Pro dashboard.
        </p>
      </div>
    `
  };

  return await sendEmail(emailParams);
}

export async function sendTradingRecommendation(recommendation: any): Promise<boolean> {
  const signal = recommendation.signal;
  const company = recommendation.company;
  const confidence = recommendation.confidence;

  const emailParams: EmailParams = {
    to: "amigochiang@gmail.com",
    from: process.env.SENDGRID_FROM_EMAIL || "noreply@portfoliopro.com",
    subject: `AI Trading Signal: ${signal} ${company?.ticker}`,
    text: `AI recommends ${signal} for ${company?.name} with ${confidence}% confidence`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #0052FF;">AI Trading Recommendation</h2>
        <div style="background-color: ${signal === 'BUY' ? '#dcfce7' : signal === 'SELL' ? '#fee2e2' : '#fef3c7'}; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: ${signal === 'BUY' ? '#166534' : signal === 'SELL' ? '#991b1b' : '#92400e'}; margin-bottom: 15px;">
            ${signal} ${company?.name} (${company?.ticker})
          </h3>
          <p style="color: #374151; line-height: 1.6;">
            <strong>Confidence:</strong> ${confidence}%<br>
            <strong>Reasoning:</strong> ${recommendation.reasoning}<br>
            ${recommendation.fxAdvantage ? `<strong>FX Advantage:</strong> ${recommendation.fxAdvantage}%<br>` : ''}
            ${recommendation.optimalTiming ? `<strong>Optimal Timing:</strong> ${recommendation.optimalTiming}` : ''}
          </p>
        </div>
        <p style="color: #64748B; font-size: 12px; margin-top: 30px;">
          This recommendation is generated by AI analysis and should not be considered as financial advice.
        </p>
      </div>
    `
  };

  return await sendEmail(emailParams);
}
